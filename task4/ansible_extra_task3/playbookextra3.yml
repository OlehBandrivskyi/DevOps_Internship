- name: Install DockerEngine on instances
  hosts: all
  become: yes

  vars:
    source_wp_folder: ./wp/
    source_db_folder: ./db/
    destin_folder: /home/ec2-user

  tasks:

  - name: Update all packages
    yum:
        name: '*'
        state: latest
        update_only: yes

  - name: Install the most recent Docker Engine package
    shell: "amazon-linux-extras install docker -y"
    notify: Add user to the docker group

  - name: Start the Docker service at startup
    service:
        name: docker
        state: started
        enabled: yes

  - block:

    - name: Copy DB files
      copy:
         src: "{{ source_db_folder }}"
         dest: "{{ destin_folder }}"
         owner: ec2-user
         group: ec2-user
         mode: 0744

    - name: Create directory for db
      file:
         path: "{{ destin_folder }}/db"
         state: directory

    - name: Create DB image
      shell: "docker build -t mydb:latest ."

    - name: Run db container
      shell: "docker run -d --env-file ./env.list -p 3306:3306 mydb --default-authentication-plugin=mysql_native_password"

    when: "'type_DB_Instance' in group_names"

  - block:
  
    - name: Copy WP files
      copy:
         src: "{{ source_wp_folder }}"
         dest: "{{ destin_folder }}"
         owner: ec2-user
         group: ec2-user
         mode: 0744

    - name: Create WP image
      shell: "docker build -t mywordpress:latest ."

    - name: Run WP container
      shell: "docker run -d --env-file ./env.list -p 8080:80 mywordpress"

    when: "'type_WP_Instance' in group_names"


  handlers:
  - name: Add user to the docker group
    shell: "usermod -a -G docker ec2-user"